name: Go
on: [push]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Get dependencies
      run: |
        go mod download

    - name: Build
      run: |
        GOOS=linux GOARCH=amd64 go build -v -o ${GITHUB_REPOSITORY##*/}-linux-x64 ./...
        GOOS=linux GOARCH=arm GOARM=5 go build -v -o ${GITHUB_REPOSITORY##*/}-linux-armv5 ./...
        GOOS=linux GOARCH=mipsle go build -v -o ${GITHUB_REPOSITORY##*/}-linux-mipsle ./...
        GOOS=windows GOARCH=amd64 go build -v -o ${GITHUB_REPOSITORY##*/}-win32-x64 ./...
        GOOS=windows GOARCH=386 go build -v -o ${GITHUB_REPOSITORY##*/}-win32-ia32 ./...
        GOOS=darwin GOARCH=amd64 go build -v -o ${GITHUB_REPOSITORY##*/}-darwin-x64 ./...
    
    - name: Create a Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${GITHUB_REF##*/}
        release_name: ${GITHUB_REF##*/}
        draft: false
        prerelease: false

    - name: Upload a Release Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # The URL for uploading assets to the release
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        # The path to the asset you want to upload
        asset_path: ${GITHUB_REPOSITORY##*/}-linux-x64
        # The name of the asset you want to upload
        asset_name: ${GITHUB_REPOSITORY##*/}-linux-x64
        # The content-type of the asset you want to upload. See the supported Media Types here: https://www.iana.org/assignments/media-types/media-types.xhtml for more information
        asset_content_type: application/x-elf
